////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//Write a range function that takes two arguments, start and end, and 
//returns an array containing all the numbers from start up to (and including) end.

//function range(start, end, step = 1) {
//let array = [];
//if (start === end) return []
//if (step < 0) return []
//for pos step
//for (let i = start; i <= end; i ++){
 // array.push(i)
//}
//return array
//}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//Next, write a sum function that takes an array of numbers and returns the sum of these numbers.
function sum(array) {
  let num = 0
for(let i = 0; i < array.length; i ++){
  num += array[i]
}
return num
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array, newArray= []) {
  
for (var i = 0; i < array.length; i ++){
  newArray.unshift(array[i])
}
return newArray
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

//function reverseArrayInPlace(array) {
//  let num 
//for (var i = 0; i < (array.length); i ++){
//  let num = array[i]
  //replace the first item in array with last item
//  array[i] = array[array.length]
  //replace the the last item in array with first
 // array[array.length] = num
  
//}
//return array
//}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
  let rest = null;
  //backwards for loop 
  for (let i = array.length -1; i >= 0; i--){
    rest = {value: array[i], rest: rest}
  }
  return rest
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list, array = []) {
//base
if(list.rest === null){
  array.push(list.value)
  return array
}
array.push(list.value)
return listToArray(list.rest, array)
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//Then add a helper function prepend, which takes an element and a list and creates
// a new list that adds the element to the front of the input list
function prepend(list, element) {
let newList = list.value = element

return newList
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//which takes a list and a number and returns the element at the given position in the list
// (with zero referring to the first element) or undefined when there is no such element.
function nth(list, number) {
  if(number === 0){
    return list.value
  }
  if (number < 0) return undefined
  return nth(list.rest, number - 1)
} 

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual() {

}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
